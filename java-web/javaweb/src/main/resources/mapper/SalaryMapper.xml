<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="niuniu.javaweb.mapper.SalaryMapper">
    <insert id="insert" parameterType="niuniu.javaweb.pojo.Salary">
        insert into salary (salary_name, price, remark, state, time, operation, old_price)
        values (#{salaryName}, #{price}, #{remark}, #{state}, current_timestamp, #{operation}, #{price})
    </insert>
    <update id="updateSalary">
        update salary
        set salary_name =#{salaryName},
        remark = #{remark},
        operation = #{operation}
        <if test="oldPrice !=null and oldPrice !=''">
            ,old_price = #{oldPrice},
            price = #{price},
            time = current_timestamp
        </if>
        where salary_id = #{salaryId}
    </update>
    <select id="selectSalaryCount" resultType="int">
        select count(*)
        from salary_role
        where salary_id = #{salaryId}
          and state !=0
    </select>
    <update id="deleteSalary">
        update salary
        set state = 0
        where salary_id = #{salaryId}
    </update>
    <select id="getAllSalary" resultType="niuniu.javaweb.pojo.Salary">
        select *
        from salary
        where state !=0
        order by state ${ew.customSqlSegment}
    </select>
    <select id="getSalaryByState" resultType="niuniu.javaweb.pojo.Salary">
        select *
        from salary
        where state = #{state}
    </select>
    <insert id="insertRoleSalary">
        insert into salary_role (salary_id, role_id, time, state)
        values (#{salaryId}, #{roleId}, current_timestamp, #{state})
    </insert>
    <update id="updateRoleSalary">
        update salary_role
        set state = #{state},
            time  = current_timestamp
        where salary_id = #{salaryId}
          and role_id = #{roleId}
    </update>
    <select id="selectHasRoleSalary" resultType="int">
        select count(*)
        from salary_role
        where role_id = #{roleId}
          and salary_id = #{salaryId}
    </select>
    <select id="getUserSalary" resultType="niuniu.javaweb.pojo.Salary">
        select a.*
        from salary as a,
             salary_role as b,
             user as c
        where c.role_id = b.role_id
          and b.salary_id = a.salary_id
          and c.user_id = #{userId}
          and b.state in (1, 2)
        order by a.state
    </select>
    <select id="getChangeSalary" resultType="niuniu.javaweb.vo.RoleVO">
        select *
        from salary_role
        where state not in (0, 1)
    </select>
</mapper>
